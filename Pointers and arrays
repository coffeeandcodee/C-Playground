//Simple program that that takes two arrays and returns a "product array" with pointer implementation
//Product array has a length of the product of lengths of the two arrays (i.e, an array of length 3 and an array of length two produce an array of length 6).
//The elements of the product array are the result of multiplying elements of the first array by every element in the second array
//e.g, if array1 = [1 2], and array2 = [3 4 5], the product array returned is [ 3 4 5 6 8 10 ]
#include <iostream>

using namespace std;

int getSize(const int* const arr){
    
    int size = *(&arr + 1) - arr;
    return size;
    }

int *apply_all(const int* const arr1, size_t size1, const int* const arr2, size_t size2){
    int *new_array{};
    new_array = new int[size1 * size2];
    
    int position{0};
    
    for(size_t i{0}; i < size1; i++){
        for(size_t j{0}; j < size2; j++){
            new_array[position] = arr1[i] * arr2[j];
            position++;
            }
        }
    
    return new_array;
    }

void print(const int* const arr, size_t size){
    cout << "[ ";
    for(size_t i{0}; i < size; i++){
        cout << *(arr + i) << " ";
    }
    cout << "]" << endl;    
}

int main(){
    int array1 [] {1, 2};
    int array2 [] {3, 4, 5};
   
    const size_t array1_size {2};
    const size_t array2_size {3};
    
    int *result = apply_all(array1, array1_size, array2, array2_size);
    
    constexpr size_t results_size {array1_size * array2_size};
    
    print(result, results_size);
    
    delete [] result;
    
    return 0;
    }
